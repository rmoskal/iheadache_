<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:amq="http://activemq.apache.org/schema/core"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
	http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd
  	http://www.springframework.org/schema/jms  http://www.springframework.org/schema/jms/spring-jms.xsd
  	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd 
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<context:component-scan
		base-package="com.betterqol.iheadache"/>
	<context:annotation-config/>
	
	<task:annotation-driven executor="myExecutor" />

	<!--<import
		resource="classpath:springmvc-resteasy.xml"/> -->
		
	<task:executor id="myExecutor" pool-size="10"/>

	<util:properties
		id="couchdbProperties"
		location="classpath:/couchdb.properties"/>
		
	<context:property-placeholder  location="classpath:/app.properties" />
	
	<util:properties
		id="appProperties"
		location="classpath:/app.properties"/>
		
	<bean id = "httpFactory" class="org.ektorp.spring.HttpClientFactoryBean">
		<property name="properties" ref="couchdbProperties"/>
	</bean>

	<bean
		id="couchDbInstance"
		class="org.ektorp.impl.StdCouchDbInstance"
		scope="prototype">
		<constructor-arg ref="httpFactory"/>
	</bean>
	
	<bean
		id="headacheDatabase"
		class="org.ektorp.impl.StdCouchDbConnector">
		<constructor-arg
			value="headache-production"/>
		<constructor-arg
			ref="couchDbInstance"/>
	</bean>

<bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean" 
          p:resourceLoaderPath="classpath:/email_templates" 
          p:preferFileSystemAccess="false"/>
	
<bean id="mailSender"
      class="org.springframework.mail.javamail.JavaMailSenderImpl">
   <property name="javaMailProperties" ref="javaMailProperties"/>
   <property name="password" value="${pw}"/>
   <property name="username" value="${username}"/>     
</bean>

<util:properties id="javaMailProperties">
   <prop key="mail.store.protocol">imap</prop>
   <prop key="mail.debug">false</prop>
   <prop key="mail.auth">true</prop>
   <prop key="mail.host">${host}</prop> 
   <prop key="mail.smtp.auth">true</prop>  
   <prop key="mail.smtp.port">587</prop>      
   <prop key="mail.smtp.starttls.enable">true</prop>    
</util:properties>

	
	
	<bean id="dataloader" class="com.betterqol.iheadache.IHeadacheDataLoader" init-method="init" depends-on="headacheDatabase">
	<constructor-arg ref="headacheDatabase"/>
	<property name="dataPath" value="classpath:/init_lookup_data_production.json"/>
	</bean>
	
	   <bean id="pwEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"/>
	
<!-- 	This can be used to load more sample data. -->
	
<!--     <bean id="dataloader1" class="com.betterqol.iheadache.IHeadacheDataLoader" init-method="init" depends-on="headacheDatabase">
	<constructor-arg ref="headacheDatabase"/>
	<property name="dataPath" value="classpath:/init_demo_data.json"/>
	</bean>  -->
	
	
	

   
   
   


</beans>
